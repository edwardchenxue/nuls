<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.db.dao.impl.mybatis.mapper.TransactionMapper">
    <resultMap id="BaseResultMap" type="io.nuls.db.entity.TransactionPo">
        <id column="hash" jdbcType="VARCHAR" property="hash" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="tx_index" jdbcType="INTEGER" property="txIndex" />
        <result column="block_height" jdbcType="BIGINT" property="blockHeight" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="fee" jdbcType="BIGINT" property="fee" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="txData" jdbcType="VARBINARY" property="txData" />
        <result column="sign" jdbcType="VARBINARY" property="sign" />
    </resultMap>

    <resultMap id="UtxoTxResultMap"  type="io.nuls.db.entity.TransactionPo" extends="BaseResultMap">
        <collection property="inputs" javaType="java.util.List" ofType="io.nuls.db.entity.UtxoInputPo">
            <id column="in_tx_hash" jdbcType="VARCHAR" property="txHash" />
            <id column="in_index" jdbcType="INTEGER" property="inIndex" />
            <id column="from_hash" jdbcType="VARCHAR" property="fromHash" />
            <result column="from_index" jdbcType="INTEGER" property="fromIndex" />
            <result column="in_sign" jdbcType="VARBINARY" property="sign" />

            <association property="fromOutPut" javaType="io.nuls.db.entity.UtxoOutputPo">
                <id column="from_hash" jdbcType="VARCHAR" property="txHash" />
                <id column="from_out_index" jdbcType="INTEGER" property="outIndex" />
                <result column="from_value" jdbcType="BIGINT" property="value"/>
                <result column="from_lock_time" jdbcType="BIGINT" property="lockTime"/>
                <result column="from_address" jdbcType="VARCHAR" property="address"/>
                <result column="from_status" jdbcType="INTEGER" property="status"/>
                <result column="from_script" jdbcType="VARBINARY" property="script"/>
            </association>
        </collection>
        <collection property="outputs" javaType="java.util.List" ofType="io.nuls.db.entity.UtxoOutputPo">
            <id column="out_tx_hash" jdbcType="VARCHAR" property="txHash"/>
            <id column="out_index" jdbcType="INTEGER" property="outIndex"/>
            <result column="value" jdbcType="BIGINT" property="value"/>
            <result column="lock_time" jdbcType="BIGINT" property="lockTime"/>
            <result column="status" jdbcType="TINYINT" property="status"/>
            <result column="address" jdbcType="VARCHAR" property="address"/>
            <result column="script" jdbcType="VARBINARY" property="script"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        hash, type, tx_index, block_height, create_time, fee, remark, txData, sign
    </sql>
    <sql id="Utxo_Column_List">
         a.hash, a.type, a.tx_index, a.block_height, a.create_time, a.fee, a.remark, a.txData, a.sign,
         b.tx_hash as in_tx_hash, b.from_index, b.in_index,b.sign as in_sign,
         c.tx_hash as out_tx_hash, c.out_index, c.value, c.lock_time, c.status, c.address, c.script,
         d.tx_hash as from_hash, d.out_index as from_out_index, d.value as from_value, d.lock_time as from_lock_time,
         d.address as from_address,d.status as from_status, d.script as from_script
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="UtxoTxResultMap">
        select
        <include refid="Utxo_Column_List"/>
        from transaction a
        left join utxo_input b on a.hash = b.tx_hash
        left join utxo_output c on a.hash = c.tx_hash
        left join utxo_output d on b.from_hash = d.tx_hash and b.from_index = d.out_index
        where hash = #{hash,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from transaction
        where hash = #{hash,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="io.nuls.db.entity.TransactionPo">
        insert into transaction (hash, type, tx_index,
        block_height, create_time, fee,
        remark, txData, sign
        )
        values (#{hash,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{txIndex,jdbcType=INTEGER},
        #{blockHeight,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{fee,jdbcType=BIGINT},
        #{remark,jdbcType=VARCHAR}, #{txData,jdbcType=VARBINARY}, #{sign,jdbcType=VARBINARY}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="io.nuls.db.entity.TransactionPo">
       update transaction
        set type = #{type,jdbcType=INTEGER},
        tx_index = #{txIndex,jdbcType=INTEGER},
        block_height = #{blockHeight,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=BIGINT},
        fee = #{fee,jdbcType=BIGINT},
        remark = #{remark,jdbcType=VARCHAR},
        txData = #{txData,jdbcType=VARBINARY},
        sign = #{sign,jdbcType=VARBINARY}
        where hash = #{hash,jdbcType=VARCHAR}
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into transaction (hash, type, tx_index,
        block_height, create_time, fee,
        remark, txData, sign
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.hash,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER}, #{item.txIndex,jdbcType=INTEGER},
            #{item.blockHeight,jdbcType=BIGINT}, #{item.createTime,jdbcType=BIGINT}, #{item.fee,jdbcType=BIGINT},
            #{item.remark,jdbcType=VARCHAR}, #{item.txData,jdbcType=VARBINARY}, #{item.sign,jdbcType=VARBINARY})
        </foreach>
    </insert>

    <select id="countAll" resultType="java.lang.Long">
        select count(hash) from transaction
    </select>

    <select id="selectList" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultMap="UtxoTxResultMap">
        select
        <include refid="Utxo_Column_List"/>
        from transaction a
        left join utxo_input b on a.hash = b.tx_hash
        left join utxo_output c on a.hash = c.tx_hash
        left join utxo_output d on b.from_hash = d.tx_hash and b.from_index = d.out_index
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>
    <select id="selectCount" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultType="java.lang.Long">
        select count(hash) from transaction
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>

    <select id="selectByAddress" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultMap="UtxoTxResultMap">
        select
        <include refid="Utxo_Column_List"/>
        from tx_account_relation e
        join transaction a on e.tx_hash = a.hash
        left join utxo_input b on a.hash = b.tx_hash
        left join utxo_output c on a.hash = c.tx_hash
        left join utxo_output d on b.from_hash = d.tx_hash and b.from_index = d.out_index
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Search_Where"/>
    </select>
</mapper>